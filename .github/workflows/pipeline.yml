name: Node js app deploy to EKS
on:
  push:
    branches: [ "EKS" ]


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1


   # - name: Login to Amazon ECR
    #  id: login-ecr
     # uses: aws-actions/amazon-ecr-login@v1
    #- name: Build and push Docker image
     # env:
      #  ECR_REGISTRY: 168933414344.dkr.ecr.ap-south-1.amazonaws.com
      #  IMAGE_NAME: offsetmax-graphql-db-dev
      #run: |
      #  docker build -t $ECR_REGISTRY/$IMAGE_NAME:latest  .
       # docker push $ECR_REGISTRY/$IMAGE_NAME:latest
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest
    - name: Terraform Init
      run: terraform init 
    - name: Terraform Plan
      run: terraform plan
    - name: terraform apply
      run: terraform apply -auto-approve

    - name: Setup EKS Kubectl
      uses: zachguo/setup-eks-kubectl@v1
      with:
        cluster: offsetmax-cluster 
        region: ap-south-1




    - name: Update kube config
      run: aws eks update-kubeconfig --name offsetmax-cluster

    - name: installing eksctl
      run:
        |
        ARCH=amd64
        PLATFORM=$(uname -s)_$ARCH
        curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

        tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz

        sudo mv /tmp/eksctl /usr/local/bin
    - name: install oidc
      run: eksctl utils associate-iam-oidc-provider --region=ap-south-1 --cluster=offsetmax-cluster --approve

    
    - name: Installing the AWS Load Balancer Controller add-on
      run: |
        eksctl create iamserviceaccount \
        --cluster=offsetmax-cluster \
        --namespace=kube-system \
        --name=aws-load-balancer-controller \
        --role-name AmazonEKSLoadBalancerControllerRole \
        --attach-policy-arn=arn:aws:iam::168933414344:policy/AWSLoadBalancerControllerIAMPolicy \
        --approve
    - name: Installing helm
      run: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null \
        sudo apt-get install apt-transport-https  \
        sudo apt-get update \
        sudo apt-get install helm 
        


    - name: helm install aws-load-balancer-controller eks
      run: |
        helm repo add eks https://aws.github.io/eks-charts
        helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
           -n kube-system \
           --set clusterName=offsetmax-cluster \
           --set serviceAccount.create=false \
           --set serviceAccount.name=aws-load-balancer-controller \
           --set region=ap-south-1 \
           --set vpcId=vpc-011f1b733d94aa911 \
           --set image.repository=602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-load-balancer-controller


    
    - name: Deploy to EKS
      run: |

        kubectl create namespace graphql-dev-ns
        kubectl apply -f deployment.yaml
        kubectl apply -f config-map.yaml
        kubectl apply -f service.yaml
        kubectl apply -f ingress.yaml
